- hosts: localhost
  tasks:
  - name: Install initial required packages
    package:
      name: "{{ item }}"
      state: latest
    with_items:
      - libselinux-python
    become: true

  - name: Add azure-cli DNF/YUM repos
    yum_repository:
      name: azure-cli
      description: "Azure CLI"
      enabled: yes
      baseurl: https://packages.microsoft.com/yumrepos/azure-cli
      gpgkey: https://packages.microsoft.com/keys/microsoft.asc
      gpgcheck: yes
    become: true

  - name: Add google cloud sdk DNF/YUM repos
    yum_repository:
      name: google-cloud-sdk
      description: "Google Cloud SDK"
      enabled: yes
      baseurl: https://packages.cloud.google.com/yum/repos/cloud-sdk-el7-x86_64
      gpgkey: https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
      gpgcheck: yes
    become: true

  - name: Add kubernetes DNF/YUM repos
    yum_repository:
      name: kubernetes
      description: "Kubernetes"
      enabled: yes
      baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
      gpgkey: https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
      gpgcheck: yes
    become: true

  - name: Add official docker repos
    get_url:
      url: https://download.docker.com/linux/fedora/docker-ce.repo
      dest: /etc/yum.repos.d/docker-ce.repo
    become: true
    register: dockerce_downloaded

  - name: Enable docker-ce-nightly
    command:
      cmd: dnf config-manager --set-enabled docker-ce-nightly
      warn: False
    when: dockerce_downloaded.changed
    become: true

  - name: Upgrade all packages
    package:
      name: "*"
      state: latest
    become: true

  - name: Create packages-to-install list
    set_fact:
      packages_to_install:
        - git
        - docker-ce
        - docker-compose
        - azure-cli
        - vim-enhanced
        - python3
        - python3-devel
        - wget
        - unzip
        - telnet
        - nodejs
        - jq
        - nmap
        - traceroute
        - tcpdump
        - strace
        - ltrace
        - mtr
        - rsync
        - zip
        - myrepos
        - recode
        - java-1.8.0-openjdk
        - java-1.8.0-openjdk-devel
        - google-cloud-sdk
        - redhat-rpm-config
        - kubectl
        - libffi-devel
        - gcc
        - libselinux-python
        - libpqxx-devel
        - googler
        - bash-completion
        - apg
        - haveged
        - bind-utils
        - httpd-tools
        - tree
        - htop
        - goaccess
        - whois
        - go
        - shyaml
        - util-linux-user
        - zsh
        - the_silver_searcher

  - name: Install packages via cmd
    command:
      cmd: "dnf install -y {{ packages_to_install | join(' ') }}"
      warn: False
    become: yes

  - name: Install pip tools
    command:
      cmd: "pip3 install --upgrade {{ item }}"
    with_items:
      - wharfee
      - pgcli
      - mycli
      - bpython
      - jmespath-terminal
      - terraform-compliance
    become: yes

  - name: Enable and start services
    service:
      name: "{{ item }}"
      state: started
      enabled: yes
    with_items:
      - haveged
    become: true

  - name: Install profitbricks-cli
    command:
      cmd: "npm install -g profitbricks-cli"
    become: true

  - name: Install liquidprompt
    command:
      cmd: "git clone https://github.com/nojhan/liquidprompt.git /usr/share/liquidprompt"
      creates: /usr/share/liquidprompt
    become: true

  - name: Check local and remote terraform version
    command: "/vagrant/files/bin/update_terraform"
    register: update_terraform

  - name: Set update_terraform fact
    set_fact:
      update_terraform: "{{ update_terraform.stdout_lines[0]|int }}"

  - name: Install Terraform
    shell:
      cmd: "/vagrant/files/bin/install_terraform"
    become: true
    when: update_terraform|bool

  - name: Check local and remote helm version
    command: "/vagrant/files/bin/update_helm"
    register: update_helm

  - name: Set update_helm fact
    set_fact:
      update_helm: "{{ update_helm.stdout_lines[0]|int }}"

  - name: Install helm
    shell:
      cmd: "/vagrant/files/bin/install_helm"
    become: true
    when: update_helm|bool

  - name: Install kubectx
    get_url:
      url: https://raw.githubusercontent.com/ahmetb/kubectx/master/kubectx
      dest: /usr/local/bin/kubectx
    become: true

  - name: Install kubens
    get_url:
      url: https://raw.githubusercontent.com/ahmetb/kubectx/master/kubens
      dest: /usr/local/bin/kubens
    become: true

  - name: Filemods for kubens and kubectx
    file:
      path: "/usr/local/bin/{{ item }}"
      mode: 0755
    with_items:
      - kubens
      - kubectx
    become: true

  - name: Install or Update k9s
    command:
      cmd: /vagrant/files/bin/install_k9s
      warn: False
    become: true

  - name: Install or Update Terragrunt
    command:
      cmd: /vagrant/files/bin/install_terragrunt
      warn: False
    become: true

  - name: Install or Update Kubebox
    command:
      cmd: /vagrant/files/bin/install_kubebox
      warn: False
    become: true

  - name: Install or Update Stern
    command:
      cmd: /vagrant/files/bin/install_stern
      warn: False
    become: true

  - name: Check oh-my-zsh installed
    command: "/vagrant/files/bin/oh_my_zsh_installed"
    register: oh_my_zsh_installed
    become: yes
    become_user: vagrant

  - name: Set oh_my_zsh_installed fact
    set_fact:
      oh_my_zsh_installed: "{{ oh_my_zsh_installed.stdout_lines[0]|int }}"

  - name: Install and configure oh-my-zsh
    shell:
      cmd: "/vagrant/files/bin/install_oh_my_zsh"
    when: oh_my_zsh_installed|bool
    become: yes
    become_user: vagrant

  - name: Copy powerlevel10k config
    become: yes
    become_user: vagrant
    copy:
      src: /vagrant/files/config/p10k.zsh
      dest: ~/.p10k.zsh

  - name: Set zsh as default shell
    when: oh_my_zsh_installed|bool  
    become: yes
    become_user: vagrant
    expect:
        command: "chsh -s /usr/bin/zsh"
        responses:
          (?i)password: "vagrant"
