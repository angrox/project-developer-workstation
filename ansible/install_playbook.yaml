- hosts: localhost
  vars:
    homedir: "/home/lima.linux"
    configdir: "/limaconfig"
    user: "lima"
    arch_mapping: {
      "aarch64": "arm64",
      "x86_64": "amd64"
    }
  tasks:
  - name: Add azure-cli DNF/YUM repos
    ansible.builtin.yum_repository:
      name: azure-cli
      description: "Azure CLI"
      enabled: yes
      baseurl: https://packages.microsoft.com/yumrepos/azure-cli
      gpgkey: https://packages.microsoft.com/keys/microsoft.asc
      gpgcheck: yes
    become: true

  - name: Add google cloud sdk DNF/YUM repos
    ansible.builtin.yum_repository:
      name: google-cloud-sdk
      description: "Google Cloud SDK"
      enabled: yes
      baseurl: "https://packages.cloud.google.com/yum/repos/cloud-sdk-el7-{{ ansible_architecture }}"
      gpgkey: https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
      gpgcheck: yes
    become: true

  - name: Add kubernetes DNF/YUM repos
    yum_repository:
      name: kubernetes
      description: "Kubernetes"
      enabled: yes
      baseurl: "https://packages.cloud.google.com/yum/repos/kubernetes-el7-{{ ansible_architecture }}"
      gpgkey: https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
      gpgcheck: yes
    become: true

  - name: Add official docker repos
    get_url:
      url: https://download.docker.com/linux/fedora/docker-ce.repo
      dest: /etc/yum.repos.d/docker-ce.repo
    become: true
    register: dockerce_downloaded

  - name: Enable docker-ce-nightly
    command:
      cmd: dnf config-manager --set-enabled docker-ce-nightly
    when: dockerce_downloaded.changed
    become: true

  - name: Upgrade all packages
    package:
      name: "*"
      state: latest
    become: true

  - name: Create packages-to-install list
    set_fact:
      packages_to_install:
        - git
        - docker-ce
        - docker-compose
        - azure-cli
        - vim-enhanced
        - python3
        - python3-devel
        - wget
        - unzip
        - telnet
        - nodejs
        - jq
        - nmap
        - traceroute
        - tcpdump
        - strace
        - ltrace
        - mtr
        - rsync
        - zip
        - myrepos
        - recode
        - java-1.8.0-openjdk
        - java-1.8.0-openjdk-devel
        - google-cloud-sdk
        - redhat-rpm-config
        - kubectl
        - libffi-devel
        - gcc
        - libpqxx-devel
        - googler
        - bash-completion
        - apg
        - haveged
        - bind-utils
        - httpd-tools
        - tree
        - htop
        - goaccess
        - whois
        - go
        - shyaml
        - util-linux-user
        - zsh
        - the_silver_searcher
        - fzf
        - just
        - git-delta
        - gcc-c++
        - cargo
        - nodejs
        - ripgrep
        - neovim
        - awscli

  - name: Install packages via cmd
    ansible.builtin.command:
      cmd: "dnf install -y {{ packages_to_install | join(' ') }}"
    become: yes

  - name: Install github binenv file installer
    ansible.builtin.command: "{{ vars.configdir }}/files/bin/install_binenv {{ [ansible_architecture] | map('extract', arch_mapping) | first }}"
    args:
      creates: "{{ vars.homedir }}/.binenv/shim"

  - name: Update binenv cache files
    ansible.builtin.command: "{{ vars.homedir }}/.binenv/binenv update"
    args:
      creates: "{{ vars.homedir }}/.cache/binenv/cache.json"

  - name: Install packges via binenv
    command: "{{ vars.homedir }}/.binenv/binenv install {{ item }}"
    with_items:
      - terraform
      - terragrunt
      - tflint
      - stern
      - helm
      - k9s
      - kubens
      - kubectx
      - fzf
      - chezmoi

  - name: Add PATH to binenv dir
    lineinfile:
      path: "{{ vars.homedir }}/.zshenv"
      regexp: "^export PATH"
      line:   "export PATH=$PATH:{{ vars.homedir }}/.binenv"
      create: yes

  - name: Install pip tools
    command:
      cmd: "pip3 install --upgrade {{ item }}"
    with_items:
      - wharfee
      - mycli
      - bpython
    become: yes

  - name: Enable and start services
    service:
      name: "{{ item }}"
      state: started
      enabled: yes
    with_items:
      - haveged
    become: true

  - name: Install or Update Kubebox
    command:
      cmd: "{{ vars.configdir }}/files/bin/install_kubebox"
    become: true

  - name: Check oh-my-zsh installed
    command: "{{ vars.configdir }}/files/bin/oh_my_zsh_installed"
    register: oh_my_zsh_installed
    become: yes
    become_user: "{{ vars.user }}"

  - name: Set oh_my_zsh_installed fact
    set_fact:
      oh_my_zsh_installed: "{{ oh_my_zsh_installed.stdout_lines[0]|int }}"

  - name: Install and configure oh-my-zsh
    shell:
      cmd: "{{ vars.configdir }}/files/bin/install_oh_my_zsh"
    when: oh_my_zsh_installed|bool
    become: yes
    become_user: "{{ vars.user }}"

  - name: Copy powerlevel10k config
    become: yes
    become_user: "{{ vars.user }}"
    copy:
      src: "{{ vars.configdir }}/files/config/p10k.zsh"
      dest: "~/.p10k.zsh"

  - name: Set zsh as default shell
    when: oh_my_zsh_installed|bool
    become: yes
    command: "usermod -s /usr/bin/zsh {{ vars.user }}"
